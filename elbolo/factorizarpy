#!/usr/bin/env pybricks-micropython
from pybricks.hubs import EV3Brick
from pybricks.ev3devices import (Motor, ColorSensor,)
from pybricks.parameters import Port, Stop, Direction, Button, Color
from pybricks.tools import wait, StopWatch, DataLog
from pybricks.robotics import DriveBase
from pybricks.media.ev3dev import SoundFile, ImageFile


# This program requires LEGO EV3 MicroPython v2.0 or higher.
# Click "Open user guide" on the EV3 extension tab for more information.


# Create your objects here.
ev3 = EV3Brick()
# Write your program here.
ev3.speaker.beep(1)
ev3.screen.print("Hello UAM, Welcome to Robotics Class")



#Configura los motores
def Configurar(left_motor, right_motor, Motor3, motor2):
  left_motor = Motor(Port.C)
  right_motor = Motor(Port.B)
  motor3 = Motor(Port.D)
  motor2 = Motor(Port.A)

#Haz que el robot avance 23 cm hacia adelante del
def avanzar(robot, velocidad,distancia):
  robot.drive(velocidad, 0)
  wait(tiempo)

#haz que el robot haga un giro de 90 grados a la izquierda
def girar(left_motor, right_motor, robot):
  left_motor = Motor(Port.C)
  right_motor = Motor(Port.B)
  robot = DriveBase(left_motor, right_motor, 67,250)
  robot.turn(-150)
  wait(1000)



 #cerrar garra de motor3 
def cerrarGarra(motor3):
    motor3.run
    motor3.run_angle(400 ,-280)
    wait(1000)

#trabaja el motor a al 100% de su potencia es un elevador haz que suba 
def elevadorPotencia(motor2):
    motor2.run

#hace que el robot se haga para atras 
def retroceder(left_motor, right_motor, robot):
    robot.drive(-120, 0)
    wait(1000)
    robot.stop()
    
#  esto en elmain  
# robot = DriveBase(left_motor, right_motor, 50,50)
# robot.drive(-120, 0)
# wait(1000)
# robot.stop()

#haga un giro hacia la derecha del robot
def giroDerecha(left_motor, right_motor, robot):
    robot.turn(150)
    wait(1000)
    robot.stop()


#ahora avance 30 cm hacia adelante 
def avanzar
robot.drive(300, 0)
wait(1000)
robot.stop()

#baje el asensor el robot del motor2
motor2.run(700)
wait(1000)
motor2.stop()


def main():
    left_motor = Motor(Port.C)  
    right_motor = Motor(Port.B)
    robot = DriveBase(left_motor, right_motor, 67,250)
    
    avanzar(robot, 300, 1000)