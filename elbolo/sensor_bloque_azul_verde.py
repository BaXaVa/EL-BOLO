def condicional_definitivo(): #condicional para apilamiento de verde y azul
        print("estamos en frente de la 2da apilacion")
        retrocede_recto(right_motor,left_motor,17)
        robot.turn(88)
        robot.stop()
        avanzar_hasta_color(right_motor, left_motor,  sensor_color_bloque, Color.RED)
        robot.turn(-88)
        robot.stop()
        retrocede_recto(right_motor,left_motor,20)
        print("en el checkpoint")
        movimiento_recto(right_motor,left_motor,18)
        robot.turn(-88)
        robot.stop()
        movimiento_recto(right_motor,left_motor,45)
        print("Lllegando al bloque amarillo")
        robot.turn(-88)
        robot.stop()
        retrocede_recto(right_motor,left_motor,4)
        posicionar_garra_desde_cero()
        wait(100)
        movimiento_recto(right_motor,left_motor,8.8)
        bajar_garra()
        cerrar_garra()
        subir_garra()
        print("amarillo capturado")
        retroceder_hasta_color(right_motor, left_motor, sensor_color_bloque, Color.BLACK)
        wait(200)
        robot.turn(88)
        robot.stop()
        wait(100)
        movimiento_recto(right_motor,left_motor, 9.8)
        robot.turn(-88)
        robot.stop()
        wait(100)
        movimiento_recto(right_motor,left_motor, 1)
        reposar_bloque()
        print("apilacion doble completada")
        abrir_garra()
        retrocede_recto(right_motor,left_motor,4)
        bajar_garra()
        posicionar_garra_desde_cero()
        movimiento_recto(right_motor,left_motor,5)
        print("verificando color")
        color_bloque_final_lineal = sensor_bloque_enfrente.color()
        print(sensor_bloque_enfrente.color())
        print("guardamos el color del bloque 2")      
        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque, Color.BLACK)
        robot.turn(88)
        robot.stop()
        wait(100)
        movimiento_recto(right_motor,left_motor,10)
        robot.turn(-88)
        robot.stop()
        movimiento_recto(right_motor,left_motor,1.5)
        print("en frente al segundo bloque")
        print("verificando color")
        color_bloque_tercero = sensor_bloque_enfrente.color()
        print(sensor_bloque_enfrente.color())
        print("guardamos el color del tercer bloque")
        if color_bloque_final_lineal == Color.BLUE and color_bloque_tercero == Color.GREEN:
                #esto es para bloque 2 es verde y bloque 3 es azul
                print("1 en ejecucion")
                print("apilamos en secuencia")
                cerrar_garra()
                subir_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,9.8)
                robot.turn(88)
                robot.stop()
                reposar_bloque()
                print("apilacion triple completada")
                print("verde, azul,amarillo")
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,4)
                cerrar_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,60)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                print("cuadrito verde")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(88)
                robot.stop()
                print("fin cuadrito verde")
                print("en camino al bloque azul") 
                retrocede_recto(right_motor,left_motor,35)
                print("me posiciono")
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-90)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                robot.turn(90)
                robot.stop()
                #VERIFICAR SI FUNCIONA EL AVANZAR
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                movimiento_recto(right_motor,left_motor,15)
                retrocede_recto(right_motor,left_motor,4)
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,6)
                cerrar_garra()
                print("bloque amarillo capturado")
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                wait(200)
                robot.turn(90)
                robot.stop()
                movimiento_recto(right_motor,left_motor, 9.8)
                robot.turn(-88)
                robot.stop()
                wait(100)
                subir_garra()
                movimiento_recto(right_motor,left_motor, 9.8)
                reposar_bloque()
                print("apilacion doble completada")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,5)
                print("verificando color")
                color_bloque_final_lineal = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del bloque 2")      
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque, Color.BLACK)
                robot.turn(88)
                robot.stop()
                wait(100)
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,1.5)
                print("en frente al segundo bloque")
                print("verificando color")
                color_bloque_tercero = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del tercer bloque")
                #verificamos si los colores son verde y azul
                if color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.BLUE:
                        print("1.1 en ejecucion")
                        print("era azul el ultimo")
                        print("apilamos en secuencia")
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-90)
                        robot.stop() 
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(90)
                        robot.stop()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(-90)
                        robot.stop()
                        subir_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        reposar_bloque()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        posicionar_garra_desde_cero()
                        bajar_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,20)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,40)
                        abrir_garra()
                        escombro_final()
                elif color_bloque_final_lineal == Color.BLUE and color_bloque_tercero == Color.GREEN:
                        print("1.2 en ejecucion")
                        print("es diferente entonces vamos por el apliamiento doble azul")
                        retrocede_recto(right_motor,left_motor,4)
                        abrir_garra()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-88)
                        robot.stop()
                        print("en camino al bloque apilado")
                        movimiento_recto(right_motor,left_motor,9.6)
                        robot.turn(88)
                        robot.stop()
                        subir_garra()
                        reposar_bloque()
                        print("apilacion triple completada")
                        print("apilacion en medio")
                        print("azul,verde, amarillo"    )
                        retrocede_recto(right_motor,left_motor,4)
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,10)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,30)
                        abrir_garra()
                        escombro_final()
                elif color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.GREEN:
                        print("1.3 en ejecucion")
                        print("ambos son verdes")
                        retrocede_recto(right_motor,left_motor,4)
                        abrir_garra()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-88)
                        robot.stop()
                        print("en camino al bloque apilado")
                        movimiento_recto(right_motor,left_motor,9.6)
                        robot.turn(88)
                        robot.stop()
                        subir_garra()
                        reposar_bloque()
                        print("apilacion triple completada")
                        print("apilacion en medio")
                        print("azul,verde, amarillo"    )
                        retrocede_recto(right_motor,left_motor,4)
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,10)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,30)
                        abrir_garra()
                        escombro_final()
        elif color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.BLUE:
                print("2 en ejecucion")
                print("apilamos en secuencia")
                cerrar_garra()
                subir_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,9.8)
                robot.turn(88)
                robot.stop()
                reposar_bloque()
                print("apilacion triple completada")
                print("azul,verde,amarillo")
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,4)
                cerrar_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,50)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                print("cuadrito azul")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(88)
                robot.stop()
                print("fin cuadrito azul")
                print("en camino al bloque verde") 
                retrocede_recto(right_motor,left_motor,35)
                print("me posiciono")
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(90)
                robot.stop()
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.RED)
                movimiento_recto(right_motor,left_motor,15)
                robot.turn(-90)
                robot.stop()
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-90)
                robot.stop()
                movimiento_recto(right_motor,left_motor,35)
                robot.turn(90)
                robot.stop()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,6)
                cerrar_garra()
                print("bloque amarillo capturado")
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                wait(200)
                robot.turn(90)
                robot.stop()
                movimiento_recto(right_motor,left_motor, 9.8)
                robot.turn(-88)
                robot.stop()
                wait(100)
                subir_garra()
                movimiento_recto(right_motor,left_motor, 9.8)
                reposar_bloque()
                print("apilacion doble completada")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,5)
                print("verificando color")
                color_bloque_final_lineal = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del bloque 2")      
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque, Color.BLACK)
                robot.turn(88)
                robot.stop()
                wait(100)
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,1.5)
                print("en frente al segundo bloque")
                print("verificando color")
                color_bloque_tercero = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del tercer bloque")
                #verificamos si los colores son verde y azul
                if color_bloque_final_lineal == Color.BLUE and color_bloque_tercero == Color.GREEN:
                        print("2.1 en ejecucion")
                        print("era azul el ultimo")
                        print("apilamos en secuencia")
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-90)
                        robot.stop() 
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(90)
                        robot.stop()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(-90)
                        robot.stop()
                        subir_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        reposar_bloque()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        posicionar_garra_desde_cero()
                        bajar_garra()
                        movimiento_recto(right_motor,left_motor,6)
                        cerrar_garra()
                        retrocede_recto(right_motor,left_motor,30)
                        abrir_garra()
                        escombro_final()
                elif color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.BLUE:
                                print("2.2 en ejecucion")
                                print("apilamiento en medio")
                                print("es diferente entonces vamos por el apliamiento doble verde")
                                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                                abrir_garra()
                                posicionar_garra_desde_cero()
                                robot.turn(-88)
                                robot.stop()
                                print("en camino al bloque apilado")
                                movimiento_recto(right_motor,left_motor,9.6)
                                robot.turn(88)
                                robot.stop()
                                subir_garra()
                                reposar_bloque()
                                print("apilacion triple completada")
                                print("apilacion en medio")
                                print("verde,azul, amarillo")
                                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                                abrir_garra()
                                posicionar_garra_desde_cero()
                                movimiento_recto(right_motor,left_motor,6)
                                cerrar_garra()
                                retrocede_recto(right_motor,left_motor,30)
                                abrir_garra()
                                escombro_final()
        elif color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.GREEN:
                #esto es para bloque 2 es verde y bloque 3 es azul
                print("3 en ejecucion")
                print("apilamos en secuencia")
                cerrar_garra()
                subir_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,9.8)
                robot.turn(88)
                robot.stop()
                reposar_bloque()
                print("apilacion triple completada")
                print("verde,verde ,amarillo")
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,4)
                cerrar_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,60)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                print("cuadrito verde")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(88)
                robot.stop()
                print("fin cuadrito verde")
                print("en camino al bloque azul") 
                retrocede_recto(right_motor,left_motor,35)
                print("me posiciono")
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-90)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                robot.turn(90)
                robot.stop()
                #VERIFICAR SI FUNCIONA EL AVANZAR
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                movimiento_recto(right_motor,left_motor,15)
                retrocede_recto(right_motor,left_motor,4)
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,6)
                cerrar_garra()
                print("bloque amarillo capturado")
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                wait(200)
                robot.turn(90)
                robot.stop()
                movimiento_recto(right_motor,left_motor, 9.8)
                robot.turn(-88)
                robot.stop()
                wait(100)
                subir_garra()
                movimiento_recto(right_motor,left_motor, 9.8)
                reposar_bloque()
                print("apilacion doble completada")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,5)
                print("verificando color")
                color_bloque_final_lineal = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del bloque 2")      
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque, Color.BLACK)
                robot.turn(88)
                robot.stop()
                wait(100)
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,1.5)
                print("en frente al segundo bloque")
                print("verificando color")
                color_bloque_tercero = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del tercer bloque")
                #verificamos si los colores son verde y azul
                if color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.BLUE:
                        print("3.1 en ejecucion")
                        print("era azul el ultimo")
                        print("apilamos en secuencia")
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-90)
                        robot.stop() 
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(90)
                        robot.stop()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(-90)
                        robot.stop()
                        subir_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        reposar_bloque()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        posicionar_garra_desde_cero()
                        bajar_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,20)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,40)
                        abrir_garra()
                        escombro_final()
                elif color_bloque_final_lineal == Color.BLUE and color_bloque_tercero == Color.GREEN:
                        print("3.2 en ejecucion")
                        print("es diferente entonces vamos por el apliamiento doble azul")
                        retrocede_recto(right_motor,left_motor,4)
                        abrir_garra()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-88)
                        robot.stop()
                        print("en camino al bloque apilado")
                        movimiento_recto(right_motor,left_motor,9.6)
                        robot.turn(88)
                        robot.stop()
                        subir_garra()
                        reposar_bloque()
                        print("apilacion triple completada")
                        print("apilacion en medio")
                        print("azul,verde amarillo")
                        retrocede_recto(right_motor,left_motor,4)
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,10)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,30)
                        abrir_garra()
                        escombro_final()
        elif color_bloque_final_lineal == Color.BLUE and color_bloque_tercero == Color.BLUE:
                #esto es para bloque 2 es verde y bloque 3 es azul
                print("4 en ejecucion")
                print("apilamos en secuencia")
                cerrar_garra()
                subir_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,9.8)
                robot.turn(88)
                robot.stop()
                reposar_bloque()
                print("apilacion triple completada")
                print("azul,azul ,amarillo")
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,4)
                cerrar_garra()
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,60)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                print("cuadrito azul")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(88)
                robot.stop()
                print("fin cuadrito azul")
                print("en camino al bloque azul") 
                retrocede_recto(right_motor,left_motor,35)
                print("me posiciono")
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                robot.turn(-90)
                robot.stop()
                movimiento_recto(right_motor,left_motor,20)
                robot.turn(90)
                robot.stop()
                #VERIFICAR SI FUNCIONA EL AVANZAR
                avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                movimiento_recto(right_motor,left_motor,15)
                retrocede_recto(right_motor,left_motor,4)
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,6)
                cerrar_garra()
                print("bloque amarillo capturado")
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                wait(200)
                robot.turn(90)
                robot.stop()
                movimiento_recto(right_motor,left_motor, 9.8)
                robot.turn(-88)
                robot.stop()
                wait(100)
                subir_garra()
                movimiento_recto(right_motor,left_motor, 9.8)
                reposar_bloque()
                print("apilacion doble completada")
                abrir_garra()
                retrocede_recto(right_motor,left_motor,4)
                bajar_garra()
                posicionar_garra_desde_cero()
                movimiento_recto(right_motor,left_motor,5)
                print("verificando color")
                color_bloque_final_lineal = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del bloque 2")      
                retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque, Color.BLACK)
                robot.turn(88)
                robot.stop()
                wait(100)
                movimiento_recto(right_motor,left_motor,10)
                robot.turn(-88)
                robot.stop()
                movimiento_recto(right_motor,left_motor,1.5)
                print("en frente al segundo bloque")
                print("verificando color")
                color_bloque_tercero = sensor_bloque_enfrente.color()
                print(sensor_bloque_enfrente.color())
                print("guardamos el color del tercer bloque")
                #verificamos si los colores son verde y azul
                if color_bloque_final_lineal == Color.BLUE and color_bloque_tercero == Color.GREEN:
                        print("4.1 en ejecucion")
                        print("era azul el ultimo")
                        print("apilamos en secuencia")
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-90)
                        robot.stop() 
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(90)
                        robot.stop()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        movimiento_recto(right_motor,left_motor,9.8)
                        robot.turn(-90)
                        robot.stop()
                        subir_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        reposar_bloque()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        posicionar_garra_desde_cero()
                        bajar_garra()
                        movimiento_recto(right_motor,left_motor,9.8)
                        cerrar_garra()
                        avanzar_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,20)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,40)
                        abrir_garra()
                        escombro_final()
                elif color_bloque_final_lineal == Color.GREEN and color_bloque_tercero == Color.BLUE:
                        print("4.2 en ejecucion")
                        print("es diferente entonces vamos por el apliamiento doble azul")
                        retrocede_recto(right_motor,left_motor,4)
                        abrir_garra()
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(-88)
                        robot.stop()
                        print("en camino al bloque apilado")
                        movimiento_recto(right_motor,left_motor,9.6)
                        robot.turn(88)
                        robot.stop()
                        subir_garra()
                        reposar_bloque()
                        print("apilacion triple completada")
                        print("apilacion en medio")
                        print("azul,verde amarillo")
                        retrocede_recto(right_motor,left_motor,4)
                        posicionar_garra_desde_cero()
                        movimiento_recto(right_motor,left_motor,4)
                        cerrar_garra()
                        retroceder_hasta_color(right_motor,left_motor,sensor_color_bloque,Color.BLACK)
                        robot.turn(90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,10)
                        robot.turn(-90)
                        robot.stop()
                        retrocede_recto(right_motor,left_motor,30)
                        abrir_garra()
                        escombro_final()

